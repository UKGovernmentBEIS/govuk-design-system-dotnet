@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GovUkDesignSystem.GovUkDesignSystemComponents.CookieBannerViewModel

@{
    var message = Model.CookieType switch {
        CookieType.Analytics => "We'd also like to use analytics cookies so we can understand how you use the service and make improvements.",
        CookieType.Additional => "We'd like to set additional cookies so we can remember your settings, understand how people use the service and make improvements.",
        _ => throw new ArgumentOutOfRangeException()};
    var decision = Model.BannerState switch {
        BannerState.ShowAccepted => "accepted",
        BannerState.ShowRejected => "rejected",
        _ => null 
        };
}

@if (Model.BannerState is not BannerState.Hide)
{
    <form method="POST" action="@Model.ButtonClickAction">
        @if (Model.UseAntiForgeryToken)
        {
            @Html.AntiForgeryToken()
        }
        @Html.HiddenFor(m => m.ReturnUrl)
        <div class="govuk-cookie-banner " data-nosnippet role="region" aria-label="Cookies on our service">
            <div class="govuk-cookie-banner__message govuk-width-container">
                @if (Model.BannerState is BannerState.ShowBanner)
                {
                    <div class="govuk-grid-row">
                        <div class="govuk-grid-column-two-thirds">
                            <h2 class="govuk-cookie-banner__heading govuk-heading-m">Cookies on our service</h2>

                            <div class="govuk-cookie-banner__content">
                                <p class="govuk-body">We use some essential cookies to make this service work.</p>
                                <p class="govuk-body">@message</p>
                            </div>
                        </div>
                    </div>

                    <div class="govuk-button-group">
                        @await Html.GovUkButton(new ButtonViewModel
                        {
                            Text = $"Accept {Model.CookieType.ToString().ToLower()} cookies",
                            Name = "consent",
                            Value = "accept"
                        })
                        @await Html.GovUkButton(new ButtonViewModel
                        {
                            Text = $"Reject {Model.CookieType.ToString().ToLower()} cookies",
                            Name = "consent",
                            Value = "reject"
                        })
                        <a class="govuk-link" href="@Model.ViewCookiesLink">View cookies</a>
                    </div>
                }
                else
                {
                    <div class="govuk-grid-row">
                        <div class="govuk-grid-column-two-thirds">

                            <div class="govuk-cookie-banner__content">
                                <p class="govuk-body">You’ve @decision additional cookies. You can <a class="govuk-link" href="@Model.ViewCookiesLink">change your cookie settings</a> at any time.</p>
                            </div>
                        </div>
                    </div>

                    @await Html.GovUkButton(new ButtonViewModel
                    {
                        Text = "Hide this message",
                        Name = "consent",
                        Value = "hide"
                    })
                }
            </div>
        </div>

    </form>
}